@model List<BildstudionDV.BI.ViewModels.ViewModelDeltagareAttendence>


<input type="button" class="btn btn-block btn-dark text-white" onclick="window.location.href ='../Närvaro/Attendence?date=@ViewBag.date'" value="Redigera Närvaro" />
<br />
<br />
<form action="~/Närvaro/AddDeltagare">
    <button class="btn-outline-success btn-block btn nav-link" href="@Url.Action("AddDeltagare", "Närvaro")">Lägg Till Deltagare</button>
</form>
<br />
@if (Model.Count != 0)
{
    <canvas id="myChart" width="400" height="100"></canvas>
    <br />

    <table class="table table-striped table-bordered">
        <thead>
            <tr style="background-color: darkgray;color:black;">
                <th>
                    Deltagaren<br />
                    -MatId
                </th>
                <th>Närvaro i % / dagar</th>
                <th>Diagram</th>
                <th>Redigera Deltagare</th>
            </tr>
        </thead>
        @foreach (var deltagare in Model.Where(x => x.PercentageAttendence < 50))
        {

            <tr style="background-color: darkred; color:white;">
                <td>
                    <h2>@deltagare.Deltagarn.DeltagarNamn</h2>
                    @deltagare.Deltagarn.MatId
                </td>
                <td>
                    @deltagare.PercentageAttendence % - @deltagare.AttendendedDays / @deltagare.ExpectedDays dagar närvarande<br />
                    Sjuk: @deltagare.SjukDays.ToString() / Ledig: @deltagare.LedigDays.ToString() / Frånvarande: @deltagare.Frånvarande.ToString() dagar
                </td>
                <td>
                    <input type="button" class="btn btn-light" onclick='window.location.href = "../Närvaro/diagram?accessid=@deltagare.Deltagarn.IdAcesss"' value="Se Diagram/Rapport" />
                </td>
                <td>
                    <input type="button" class="btn btn-info" onclick='window.location.href = "../Närvaro/editdeltagare?id=@deltagare.Deltagarn.IdAcesss"' value="Redigera @deltagare.Deltagarn.DeltagarNamn" />
                </td>

            </tr>

        }

        @foreach (var deltagare in Model.Where(x => x.PercentageAttendence > 50))
        {
            <tr style="background-color: darkgreen; color:white;">
                <td>
                    <h2>@deltagare.Deltagarn.DeltagarNamn</h2>
                    @deltagare.Deltagarn.MatId
                </td>
                <td>
                    <b>
                        @deltagare.PercentageAttendence % - @deltagare.AttendendedDays / @deltagare.ExpectedDays dagar närvarande<br />
                        Sjuk: @deltagare.SjukDays.ToString() / Ledig: @deltagare.LedigDays.ToString() / Frånvarande: @deltagare.Frånvarande.ToString() dagar
                    </b>
                </td>
                <td>
                    <input type="button" class="btn btn-light" onclick='window.location.href = "../Närvaro/diagram?id=@deltagare.Deltagarn.IdAcesss"' value="Se Diagram/Rapport" />
                </td>
                <td>
                    <input type="button" class="btn btn-info" onclick='window.location.href = "../Närvaro/editdeltagare?id=@deltagare.Deltagarn.IdAcesss"' value="Redigera @deltagare.Deltagarn.DeltagarNamn" />
                </td>

            </tr>

        }

        <tfoot>
            <tr style="background-color: darkgray;color:black;">
                <th>
                    Deltagarn
                </th>
                <th>
                    Närvaro i % / dagar
                </th>
                <th>Diagram</th>
                <th>Redigera</th>
            </tr>
        </tfoot>
    </table>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js"></script>
<script>
    var ctx = document.getElementById('myChart');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: [@Html.Raw(ViewBag.DeltagarNames)],
            datasets: [{
                label: 'Procent Närvaro',
                data: [@Html.Raw(ViewBag.DeltagarValue)],
                backgroundColor: [@Html.Raw(ViewBag.Color)],
                borderColor: [@Html.Raw(ViewBag.Color)],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
</script>
}
@if(Model.Count == 0)
{
    <h1>Här var det tomt, lägg till en deltagare för att få lite liv!</h1>
}